<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "activity".
 *
 * @property int $id
 * @property string $title
 * @property string $body
 * @property int $start_date
 * @property int $end_date
 * @property int $author_id
 * @property int $cycle
 * @property int $main
 * @property int $created_at
 * @property int $updated_at
 *
 * @property Usersa $author
 * @property Useractivity[] $useractivities
 */
class Activity extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'activity';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'start_date', 'end_date', 'author_id', 'created_at', 'updated_at'], 'required'],
            [['body'], 'string'],
            [['start_date', 'end_date', 'author_id', 'cycle', 'main', 'created_at', 'updated_at'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['date'], 'dateFormat'],
            [['start_date'], 'dateFormat'],
            [['end_date'], 'dateFormat'],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['author_id' => 'id']],
        ];
    }

    public function dateFormat($attr, $value){

        if(preg_match("/\d{2}.\d{2}.\d{4}/", $this->$attr)){
            
        }else{
            $this->addError($attr, 'Формат дд.мм.гггг');
        }
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'body' => 'Body',
            'start_date' => 'Start Date',
            'end_date' => 'End Date',
            'author_id' => 'Author ID',
            'cycle' => 'Cycle',
            'main' => 'Main',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAuthor()
    {
        return $this->hasOne(Usersa::className(), ['id' => 'author_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUseractivities()
    {
        return $this->hasMany(Useractivity::className(), ['activity_id' => 'id']);
    }

    public function checkEndDate($attr, $value)
    {
        $startDate = Yii::$app->formatter->asTimestamp($this->start_date);
        $endDate = Yii::$app->formatter->asTimestamp($this->end_date);

        if ($startDate > $endDate) {
            $this->addError($attr, 'Дата конца события, не может быть больше даты начала');
        }
    }


    public function beforeSave($insert)
    {
        $this->start_date = Yii::$app->formatter->asTimestamp($this->start_date);

        if (!isset($this->end_date)) {
            $this->end_date = $this->start_date;
        } else {
            $this->end_date = Yii::$app->formatter->asTimestamp($this->end_date);

        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
